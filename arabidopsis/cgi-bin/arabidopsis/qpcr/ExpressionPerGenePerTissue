#!/usr/local/bin/perl -w

use CGI qw(:standard);
use CGI::Carp qw( fatalsToBrowser );
use DBI;
use HTML::Template;
use JSON::XS;

my $underscore_plus=241;

###### Connect to database 

my $server_name = $ENV{"SERVER_NAME"};
my $dbh;

#my $INTERNAL_SERVER = ($server_name eq "www-devel.tigr.org") ? 1 : 0;
my $INTERNAL_SERVER = ($server_name eq "localhost") ? 1 : 0;

# inside
if ($INTERNAL_SERVER) {
    $dbh = DBI->connect("dbi:mysql:town_at_qpcr:mysql","access","access") or die "Cannot connect to database";
}
else {
    $dbh = DBI->connect("dbi:mysql:town_at_qpcr:mysql51-dmz-pro","access","access") or die "Cannot connect to database";
}

my $gene_name = uc param("gene");
my $tissue_name = param("tissue");
my $format=param("format");

$list_query = qq{select distinct (treatment_name)from treatment;};
my $sth1=$dbh->prepare($list_query);

$sth1->execute();
while(my @list_result=$sth1->fetchrow_array()){
	push (@drop_list, @list_result);
}
foreach my $listitem(@drop_list){
	my $show_value;
	if(length($listitem)>2){
		$show_value=$listitem;
        }
	else{ $show_value=$listitem;}
    my %list_hash = (
	elem_optionid => $show_value, 
	elem_listname => $listitem, 
    );
    push(@list_presentation, \%list_hash);
}


my $query;
my @search_results;

if(length($tissue_name)==0)   {
    $query=qq{SELECT * FROM results WHERE target_id LIKE '$gene_name%' };
}
else{
    $query=qq{SELECT * FROM results WHERE target_id LIKE '$gene_name%' 
			AND tissue_treatment_group_id LIKE '$tissue_name%'};
}

my $sth=$dbh->prepare($query);
$sth->execute();
while (my @result = $sth->fetchrow_array()){
    push(@search_results,join("\t",@result));    
}

foreach $row(@search_results)
{
   my @field=split(/\s/,$row);
   for(my $i=2;$i<8;$i+=2){
      if(!defined($field[$i])){
 	 $field[$i]="NA";$field[$i+1]="";}
      else  {
  	 if($field[$i]=~m#0\.0*\d\d\d*# )	 {
		$field[$i]=~s/(0\.0*\d\d)\d*/$1/;
	 }
	 else	 {
	     $field[$i]=~s/([1-9]+\.\d\d)\d*/$1/;
	 }
	 if($field[$i+1]=~m#0\.0*\d\d\d*# ) {
	     $field[$i+1]=~s/(0\.0*\d\d)\d*/$1/;
	 }
	 else	 {
	     $field[$i+1]=~s/([1-9]+\.\d\d)\d*/$1/;
	 }	
         $field[$i+1]=$field[$i+1];
      }

      if(($field[2] == 45) || ($field[2] == 0) ) {
	  $field[$i]="Undetectable"; $field[$i+1]="";
      }
   }
   
   my %row_hash = (
	elem_target_id => $field[0], 
	elem_tissue => $field[1], 
	elem_cycle_time => $field[2],
	elem_cycle_time2 => $field[3],
	elem_ratio => $field[4], 
	elem_ratio2 => $field[5], 
	elem_conc => $field[6],
	elem_conc2 => $field[7]

   );

   push(@result_presentation, \%row_hash);
   push(@result_presentation2, \%row_hash);
}


if ($format eq "json") {
    my ($json_object) = encode_json({expression => \@result_presentation}); 
    print header('application/json');
    print "$json_object\n";
} elsif ($format eq "text") {
    $tmpl = HTML::Template->new(filename => "search_return_text.tmpl");
    if($#result_presentation >=0){
	$tmpl->param(singlesearch_table=>\@result_presentation);
    }
    print header;
    print $tmpl->output;
} else {  # format eq HTML
    $tmpl = HTML::Template->new(filename => "search_return_html.tmpl");
    if($#result_presentation >=0){
	$tmpl->param(singlesearch_table=>\@result_presentation);
    } 
    print header;
    print $tmpl->output;
}

